{"ast":null,"code":"var _jsxFileName = \"/home/developer/Desktop/React/watch/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment-timezone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [timeZone, setTimeZone] = useState(\"India Standard Time\");\n  const [time, setTime] = useState(moment().tz(timeZone).format(\"LTS\"));\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(moment().tz(timeZone).format(\"LTS\"));\n    }, 1000);\n    debugger;\n    return () => clearInterval(interval);\n  }, [timeZone]);\n  const handleTimeZoneChange = newTimeZone => {\n    console.log(moment.tz.names());\n    setTimeZone(newTimeZone);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: timeZone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleTimeZoneChange(\"America/Los_Angeles\"),\n      children: \"America\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"EZNnEFFX0Gm0X45eRwvtYfRVlqg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","timeZone","setTimeZone","time","setTime","tz","format","interval","setInterval","clearInterval","handleTimeZoneChange","newTimeZone","console","log","names","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/developer/Desktop/React/watch/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment-timezone\";\n\nfunction App() {\n  const [timeZone, setTimeZone] = useState(\"India Standard Time\");\n  const [time, setTime] = useState(moment().tz(timeZone).format(\"LTS\"));\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(moment().tz(timeZone).format(\"LTS\"));\n    }, 1000);\n    debugger;\n    return () => clearInterval(interval);\n  }, [timeZone]);\n\n  const handleTimeZoneChange = (newTimeZone) => {\n    console.log(moment.tz.names());\n    setTimeZone(newTimeZone);\n  };\n\n  return (\n    <>\n      <h1>{time}</h1>\n      <h2>{timeZone}</h2>\n      <button onClick={() => handleTimeZoneChange(\"America/Los_Angeles\")}>\n        America\n      </button>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,qBAAqB,CAAC;EAC/D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACC,MAAM,CAAC,CAAC,CAACW,EAAE,CAACJ,QAAQ,CAAC,CAACK,MAAM,CAAC,KAAK,CAAC,CAAC;EAErEd,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,OAAO,CAACV,MAAM,CAAC,CAAC,CAACW,EAAE,CAACJ,QAAQ,CAAC,CAACK,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;IACR;IACA,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMS,oBAAoB,GAAIC,WAAW,IAAK;IAC5CC,OAAO,CAACC,GAAG,CAACnB,MAAM,CAACW,EAAE,CAACS,KAAK,CAAC,CAAC,CAAC;IAC9BZ,WAAW,CAACS,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAKZ;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfvB,OAAA;MAAAmB,QAAA,EAAKd;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMV,oBAAoB,CAAC,qBAAqB,CAAE;MAAAK,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACT,CAAC;AAEP;AAACnB,EAAA,CA1BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}